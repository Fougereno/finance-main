/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/ansi-colors/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-colors/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/*!\r\n * ansi-colors <https://github.com/doowb/ansi-colors>\r\n *\r\n * Copyright (c) 2015-2017, Brian Woodward.\r\n * Released under the MIT License.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Module dependencies\r\n */\r\n\r\nvar wrap = __webpack_require__(/*! ansi-wrap */ \"./node_modules/ansi-wrap/index.js\");\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a black background.\r\n *\r\n * ```js\r\n * console.log(colors.bgblack('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgblack\r\n */\r\n\r\nexports.bgblack = function bgblack(message) {\r\n  return wrap(40, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a blue background.\r\n *\r\n * ```js\r\n * console.log(colors.bgblue('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgblue\r\n */\r\n\r\nexports.bgblue = function bgblue(message) {\r\n  return wrap(44, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a cyan background.\r\n *\r\n * ```js\r\n * console.log(colors.bgcyan('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgcyan\r\n */\r\n\r\nexports.bgcyan = function bgcyan(message) {\r\n  return wrap(46, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a green background.\r\n *\r\n * ```js\r\n * console.log(colors.bggreen('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bggreen\r\n */\r\n\r\nexports.bggreen = function bggreen(message) {\r\n  return wrap(42, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a magenta background.\r\n *\r\n * ```js\r\n * console.log(colors.bgmagenta('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgmagenta\r\n */\r\n\r\nexports.bgmagenta = function bgmagenta(message) {\r\n  return wrap(45, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a red background.\r\n *\r\n * ```js\r\n * console.log(colors.bgred('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgred\r\n */\r\n\r\nexports.bgred = function bgred(message) {\r\n  return wrap(41, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a white background.\r\n *\r\n * ```js\r\n * console.log(colors.bgwhite('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgwhite\r\n */\r\n\r\nexports.bgwhite = function bgwhite(message) {\r\n  return wrap(47, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create a yellow background.\r\n *\r\n * ```js\r\n * console.log(colors.bgyellow('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bgyellow\r\n */\r\n\r\nexports.bgyellow = function bgyellow(message) {\r\n  return wrap(43, 49, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create black text.\r\n *\r\n * ```js\r\n * console.log(colors.black('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  black\r\n */\r\n\r\nexports.black = function black(message) {\r\n  return wrap(30, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create blue text.\r\n *\r\n * ```js\r\n * console.log(colors.blue('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  blue\r\n */\r\n\r\nexports.blue = function blue(message) {\r\n  return wrap(34, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create bold text.\r\n *\r\n * ```js\r\n * console.log(colors.bold('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  bold\r\n */\r\n\r\nexports.bold = function bold(message) {\r\n  return wrap(1, 22, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create cyan text.\r\n *\r\n * ```js\r\n * console.log(colors.cyan('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  cyan\r\n */\r\n\r\nexports.cyan = function cyan(message) {\r\n  return wrap(36, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create dim text.\r\n *\r\n * ```js\r\n * console.log(colors.dim('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  dim\r\n */\r\n\r\nexports.dim = function dim(message) {\r\n  return wrap(2, 22, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create gray text.\r\n *\r\n * ```js\r\n * console.log(colors.gray('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  gray\r\n */\r\n\r\nexports.gray = function gray(message) {\r\n  return wrap(90, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create green text.\r\n *\r\n * ```js\r\n * console.log(colors.green('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  green\r\n */\r\n\r\nexports.green = function green(message) {\r\n  return wrap(32, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create grey text.\r\n *\r\n * ```js\r\n * console.log(colors.grey('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  grey\r\n */\r\n\r\nexports.grey = function grey(message) {\r\n  return wrap(90, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create hidden text.\r\n *\r\n * ```js\r\n * console.log(colors.hidden('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  hidden\r\n */\r\n\r\nexports.hidden = function hidden(message) {\r\n  return wrap(8, 28, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create inverse text.\r\n *\r\n * ```js\r\n * console.log(colors.inverse('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  inverse\r\n */\r\n\r\nexports.inverse = function inverse(message) {\r\n  return wrap(7, 27, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create italic text.\r\n *\r\n * ```js\r\n * console.log(colors.italic('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  italic\r\n */\r\n\r\nexports.italic = function italic(message) {\r\n  return wrap(3, 23, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create magenta text.\r\n *\r\n * ```js\r\n * console.log(colors.magenta('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  magenta\r\n */\r\n\r\nexports.magenta = function magenta(message) {\r\n  return wrap(35, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create red text.\r\n *\r\n * ```js\r\n * console.log(colors.red('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  red\r\n */\r\n\r\nexports.red = function red(message) {\r\n  return wrap(31, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to reset ansi colors currently on the string.\r\n *\r\n * ```js\r\n * console.log(colors.reset('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  reset\r\n */\r\n\r\nexports.reset = function reset(message) {\r\n  return wrap(0, 0, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to add a strikethrough to the text.\r\n *\r\n * ```js\r\n * console.log(colors.strikethrough('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  strikethrough\r\n */\r\n\r\nexports.strikethrough = function strikethrough(message) {\r\n  return wrap(9, 29, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to underline the text.\r\n *\r\n * ```js\r\n * console.log(colors.underline('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  underline\r\n */\r\n\r\nexports.underline = function underline(message) {\r\n  return wrap(4, 24, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create white text.\r\n *\r\n * ```js\r\n * console.log(colors.white('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  white\r\n */\r\n\r\nexports.white = function white(message) {\r\n  return wrap(37, 39, message);\r\n};\r\n\r\n/**\r\n * Wrap a string with ansi codes to create yellow text.\r\n *\r\n * ```js\r\n * console.log(colors.yellow('some string'));\r\n * ```\r\n *\r\n * @param  {string} message String to wrap with ansi codes.\r\n * @return {string} Wrapped string\r\n * @api public\r\n * @name  yellow\r\n */\r\n\r\nexports.yellow = function yellow(message) {\r\n  return wrap(33, 39, message);\r\n};\r\n\n\n//# sourceURL=webpack://finance-main/./node_modules/ansi-colors/index.js?");

/***/ }),

/***/ "./node_modules/ansi-wrap/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ansi-wrap/index.js ***!
  \*****************************************/
/***/ (function(module) {

"use strict";
eval("\r\n\r\nmodule.exports = function(a, b, msg) {\r\n  return '\\u001b['+ a + 'm' + msg + '\\u001b[' + b + 'm';\r\n};\r\n\n\n//# sourceURL=webpack://finance-main/./node_modules/ansi-wrap/index.js?");

/***/ }),

/***/ "./src/assets/js/graph.js":
/*!********************************!*\
  !*** ./src/assets/js/graph.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const { red } = __webpack_require__(/*! ansi-colors */ \"./node_modules/ansi-colors/index.js\");\r\n\r\n//chart.js\r\nconst ctx = document.getElementById('myChart').getContext('2d');\r\n\r\n\r\nlet gradient = ctx.createLinearGradient(0, 0, 0, 450);\r\ngradient.addColorStop(0.5, 'rgba(0, 0, 255, 1)');\r\ngradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n\r\nnew Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n    labels: ['', '', '', '', '', '', ''],\r\n    datasets: [\r\n        {   \r\n            data: [0, 2, 8, 18, 40, 73, 134],\r\n            borderWidth: 2,\r\n            borderColor: '#355DFB',\r\n            backgroundColor: gradient,\r\n            fill: true,\r\n            pointRadius: 0,\r\n          },\r\n        {\r\n        data: [0, 9, 32, 64, 114, 188, 372],\r\n        borderWidth: 2,\r\n        borderColor: '#0000DE', \r\n        backgroundColor: 'rgba(0, 0, 222, 0.1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointRadius: [4, 4, 4, 4, 4, 4, 0] ,\r\n        fill: true,\r\n    },\r\n]\r\n    },\r\n    options: { \r\n      responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                  color: '#C6D9E9', \r\n                }\r\n              },\r\n              y: {\r\n                grid: {\r\n                  color: '#C6D9E9', \r\n                }\r\n              }\r\n        }\r\n      }\r\n});\r\n\n\n//# sourceURL=webpack://finance-main/./src/assets/js/graph.js?");

/***/ }),

/***/ "./src/assets/js/main.js":
/*!*******************************!*\
  !*** ./src/assets/js/main.js ***!
  \*******************************/
/***/ (function() {

eval("let burger = document.querySelector(\".burger\");\r\nlet radiowrap = document.querySelectorAll(\".main__ctradiowrap\"); \r\nlet radio = document.querySelectorAll(\".main__ctradio\"); \r\nlet checkel = document.getElementsByClassName(\"main__count_checked\");\r\nconst rangeInputs = document.querySelectorAll('input[type=\"range\"]'); \r\nlet burgermenu = document.querySelector(\".nav\");\r\nlet footer = document.querySelectorAll(\".footer__navitem\");\r\nlet info = document.querySelectorAll(\".main__iitem\");\r\n\r\nradiowrap.forEach(function(element) {\r\n  element.addEventListener('click', changeradio)\r\n})\r\nrangeInputs.forEach(input => {\r\n  input.addEventListener('input', handleInputChange)\r\n});\r\nburger.addEventListener('click', animateburger);\r\nfooter.forEach(function(element) {\r\n  element.addEventListener('click', addfootermenu)\r\n});\r\ninfo.forEach(function(element) {\r\n  element.addEventListener('click', addinfoblock)\r\n});\r\n\r\nfunction animateburger() {\r\n    if(this.classList.contains(\"nav_open\")) {\r\n        this.classList.remove (\"nav_open\");\r\n    } else {\r\n        this.classList.add (\"nav_open\");\r\n    }; \r\n    if(burgermenu.classList.contains(\"nav_visible\")) {\r\n      burgermenu.classList.remove (\"nav_visible\");\r\n    } else {\r\n      burgermenu.classList.add (\"nav_visible\");\r\n    };\r\n}\r\n\r\nfunction changeradio() {\r\n  radiowrap.forEach (element => {\r\n    element.classList.remove('main__count_checked'); \r\n  });\r\n  this.classList.add('main__count_checked');\r\n  for (let i = 0; i < this.childNodes.length; i++) {\r\n    if (this.childNodes[i].className == \"main__ctradio\") {\r\n      this.childNodes[i].checked = true;\r\n    } \r\n  }       \r\n}\r\nfunction handleInputChange(e) {\r\n  let target = e.target   \r\n  const min = target.min\r\n  const max = target.max\r\n  const val = target.value\r\n\r\n  target.style.backgroundSize = (val - min) * 100 / (max - min) + '% 100%'  \r\n}\r\nfunction addfootermenu() {\r\n  if(this.classList.contains(\"footer__visible\")) {\r\n      this.classList.remove (\"footer__visible\");\r\n  } else {\r\n      this.classList.add (\"footer__visible\");\r\n  }; \r\n}\r\nfunction addinfoblock() {\r\n  if(this.classList.contains(\"main__info_visible\")) {\r\n      this.classList.remove (\"main__info_visible\");\r\n  } else {\r\n      this.classList.add (\"main__info_visible\");\r\n  }; \r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://finance-main/./src/assets/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/assets/js/graph.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/assets/js/main.js");
/******/ 	
/******/ })()
;